cmake_minimum_required(VERSION 3.5)
set(TARGET_NAME "KipTool")
project(${TARGET_NAME} VERSION 2.9 LANGUAGES CXX)
# dirty fix
add_definitions(-DVERSION="2.9")

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
find_package(Qt6 REQUIRED COMPONENTS Widgets Charts Concurrent ) #PrintSupport

if (APPLE)
include_directories(
    ../../../imagingsuite/core/kipl/kipl/include
    ../../../imagingsuite/core/modules/ModuleConfig/include
    ../../../imagingsuite/core/modules/ReaderConfig
    ../../../imagingsuite/core/algorithms/ImagingAlgorithms/include
    ../../../imagingsuite/GUI/qt/QtAddons
    ../../../imagingsuite/GUI/qt/QtImaging
    ../../../imagingsuite/GUI/qt/QtModuleConfigure
    ../../../imagingsuite/core/modules/ReaderGUI
    ../../../imagingsuite/core/algorithms/ImagingAlgorithms/include
    ../../frameworks/imageprocessing/ProcessFramework/include
    ../../../ExternalDependencies/macos/include
    Qt6Widgets_INCLUDE_DIRS/QtCharts
    )
endif()

if (WIN32)
    include_directories(
        ../../../imagingsuite/core/kipl/kipl/include
        ../../../imagingsuite/core/modules/ModuleConfig/include
        ../../../imagingsuite/core/modules/ReaderConfig
        ../../../imagingsuite/core/algorithms/ImagingAlgorithms/include
        ../../../imagingsuite/GUI/qt/QtAddons
        ../../../imagingsuite/GUI/qt/QtImaging
        ../../../imagingsuite/GUI/qt/QtModuleConfigure
        ../../../imagingsuite/core/modules/ReaderGUI
        ../../../imagingsuite/core/algorithms/ImagingAlgorithms/include
        ../../frameworks/imageprocessing/ProcessFramework/include
        # ../../../ExternalDependencies/windows/include
        # ../../../ExternalDependencies/windows/include/libxml2
        # ../../../ExternalDependencies/windows/include/cfitsio
        # ../../../ExternalDependencies/windows/include/nexus
        ../../../imagingsuite/external/include
        Qt6Widgets_INCLUDE_DIRS/QtCharts
    )
endif()

set(SRC_FILES
    src/Fits2Tif.cpp
    src/Reslicer.cpp
    src/genericconversion.cpp
    src/loadimagedialog.cpp
    src/mergevolumesdialog.cpp
    src/ImageIO.cpp
    src/confighistorydialog.cpp
    src/imagingmoduleconfigurator.cpp
    src/main.cpp
    src/processdialog.cpp
    src/ImagingToolConfig.cpp
    src/fileconversiondialog.cpp
    src/kiptoolmainwindow.cpp
    src/mergevolume.cpp
    src/reslicerdialog.cpp
)

set(INC_FILES
    src/Fits2Tif.h
    src/Reslicer.h
    src/genericconversion.h
    src/loadimagedialog.h
    src/processdialog.h
    src/ImageIO.h
    src/confighistorydialog.h
    src/imagingmoduleconfigurator.h
    src/mergevolume.h
    src/reslicerdialog.h
    src/ImagingToolConfig.h
    src/fileconversiondialog.h
    src/kiptoolmainwindow.h
    src/mergevolumesdialog.h
)

set(UI_FILES
    src/confighistorydialog.ui
    src/fileconversiondialog.ui
    src/genericconversion.ui
    src/kiptoolmainwindow.ui
    src/loadimagedialog.ui
    src/mergevolumesdialog.ui
    src/processdialog.ui
    src/reslicerdialog.ui
)

# The MACOSX_BUNDLE_ICON_FILE variable is added to the Info.plist
# generated by CMake. This variable contains the .icns file name,
# without the path.
set(MACOSX_BUNDLE_ICON_FILE kiptool_icon.icns)

# And the following tells CMake where to find and install the file itself.
set(app_icon_macos "${CMAKE_CURRENT_SOURCE_DIR}/resources/kiptool_icon.icns")
set(APP_ICON_RESOURCE_WINDOWS "${CMAKE_CURRENT_SOURCE_DIR}/src/kiptool_icon.rc")
set_source_files_properties(${app_icon_macos} PROPERTIES
        MACOSX_PACKAGE_LOCATION "Resources")

# qt_add_executable(${TARGET_NAME} MACOSX_BUNDLE  ${app_icon_macos})

add_definitions(-DNOMINMAX)

message(KipTool Qt${QT_VERSION_MAJOR})

qt_add_executable(${TARGET_NAME}
    MANUAL_FINALIZATION
#        MACOSX_BUNDLE
    ${SRC_FILES}
    ${INC_FILES}
    ${UI_FILES}
    ${app_icon_macos}
    ${APP_ICON_RESOURCE_WINDOWS}
)

link_directories(../../../install/lib )
target_link_directories(${TARGET_NAME} PUBLIC
    ../../../install/lib
    )

if (WIN32)
# target_link_directories(${TARGET_NAME} PRIVATE
#     ../../../build-imagingsuite/lib/Release
#     ../../../install/lib
#     ../../../ExternalDependencies/windows/lib
#     ../../../imagingsuite/external/lib64/
#     )

target_link_libraries(${TARGET_NAME} PRIVATE
    Qt${QT_VERSION_MAJOR}::Core
    Qt${QT_VERSION_MAJOR}::Widgets
    Qt${QT_VERSION_MAJOR}::Concurrent
#    Qt${QT_VERSION_MAJOR}::PrintSupport
    kipl
    ModuleConfig
    ImagingAlgorithms
    ReaderConfig
    QtAddons
    ReaderGUI
    QtModuleConfigure
    ProcessFramework
    QtImaging
    LibXml2::LibXml2
    TIFF::TIFF
    cfitsio::cfitsio

)
endif()

if (UNIX)
    target_link_libraries(${TARGET_NAME} 
    PUBLIC
        Qt${QT_VERSION_MAJOR}::Core
        Qt${QT_VERSION_MAJOR}::Widgets
        Qt${QT_VERSION_MAJOR}::Concurrent
    #    Qt${QT_VERSION_MAJOR}::PrintSupport
        kipl
        ModuleConfig
        ImagingAlgorithms
        ReaderConfig
        QtAddons
        ReaderGUI
        QtModuleConfigure
        ProcessFramework
        QtImaging

        ${CFITSIO_LIBRARIES}
        LibXml2::LibXml2
    )
endif()

set_target_properties(${TARGET_NAME} PROPERTIES
    MACOSX_BUNDLE_GUI_IDENTIFIER ch.psi.kiptool
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

if(QT_VERSION_MAJOR EQUAL 6)
    qt_finalize_executable(${TARGET_NAME})
endif()

install(TARGETS ${TARGET_NAME} DESTINATION ${CMAKE_INSTALL_PREFIX}/applications
        LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/applications/${TARGET_NAME}.app/Contents/Frameworks)
